@using Shared.DTOs
@model LoginUserDto
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en" id="html-root">
<head>
    <meta charset="UTF-8">
    <title>Admin Login</title>
    <link rel="stylesheet" href="~/css/Login.css" />
</head>
<body>
    <nav class="navbar">
        <div class="navbar-brand">
            <span class="app-name" id="app-name">Products Management System</span>
        </div>
        <div class="language-toggle">
            <button id="lang-btn" class="dropbtn">
                🌐 <span id="lang-label">EN</span>
                <svg class="arrow" xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 320 512">
                    <path fill="currentColor" d="M96 192l64 64 64-64H96z" />
                </svg>
            </button>
            <div id="lang-dropdown" class="dropdown-content hide">
                <a href="#" data-lang="en">🇺🇸 English</a>
                <a href="#" data-lang="ar">🇸🇦 العربية</a>
            </div>
        </div>

    </nav>

    <div class="login-container">
        <form class="login-form" asp-action="Login" asp-controller="Admin" method="post">
            <h2 id="login-title">Admin Login</h2>

            <div class="input-group">
                <label for="email" id="email-label">Email</label>
                <input type="email" id="email" name="Email" value="@Model?.Email" required />
            </div>

            <div class="input-group">
                <label for="password" id="password-label">Password</label>
                <input type="password" id="password" name="Password" required />
            </div>

            <button type="submit" id="login-button">Login</button>

            @if (ViewData["ErrorMessage"] != null)
            {
                <p class="error-message">@ViewData["ErrorMessage"]</p>
            }
        </form>
    </div>
    @* <script src="~/js/language-toggle.js"></script> *@
    <script >
    // حفظ اللغة وتحديث الواجهة
    function setLanguage(lang) {
    localStorage.setItem('lang', lang);
    document.getElementById('lang-label').innerText = lang.toUpperCase();

    if (lang === 'ar') {
    document.getElementById('login-title').innerText = 'تسجيل دخول المشرف';
    document.getElementById('email-label').innerText = 'البريد الإلكتروني';
    document.getElementById('password-label').innerText = 'كلمة المرور';
    document.getElementById('login-button').innerText = 'تسجيل الدخول';
    document.documentElement.dir = 'rtl';  // اتجاه الصفحة يمين لليسار
    document.documentElement.lang = 'ar';
    } else {
    document.getElementById('login-title').innerText = 'Admin Login';
    document.getElementById('email-label').innerText = 'Email';
    document.getElementById('password-label').innerText = 'Password';
    document.getElementById('login-button').innerText = 'Login';
    document.documentElement.dir = 'ltr';  // اتجاه الصفحة يسار لليمين
    document.documentElement.lang = 'en';
    }
    }

    // التبديل بين إظهار/إخفاء القائمة المنسدلة عند الضغط على الزر
    const langBtn = document.getElementById('lang-btn');
    const dropdown = document.getElementById('lang-dropdown');

    langBtn.addEventListener('click', () => {
    dropdown.classList.toggle('hide');
    langBtn.classList.toggle('active');
    });

    // إخفاء القائمة عند الضغط خارجها
    document.addEventListener('click', (e) => {
    if (!e.target.closest('.language-toggle')) {
    dropdown.classList.add('hide');
    langBtn.classList.remove('active');
    }
    });

    // التعامل مع اختيار اللغة من القائمة
    dropdown.querySelectorAll('a').forEach(link => {
    link.addEventListener('click', (e) => {
    e.preventDefault();
    const selectedLang = e.target.getAttribute('data-lang');
    setLanguage(selectedLang);
    dropdown.classList.add('hide');
    langBtn.classList.remove('active');
    });
    });

    // عند تحميل الصفحة – استرجاع اللغة وتطبيقها
    document.addEventListener('DOMContentLoaded', () => {
    const lang = localStorage.getItem('lang') || 'en';
    setLanguage(lang);
    });
    </script>

</body>
</html>