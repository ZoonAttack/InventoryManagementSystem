@using Shared.DTOs
@model CreateOrderDto

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Create Order</title>
    <link rel="stylesheet" href="~/css/style.css" />
</head>
<body>
    <div class="form-container">
        <div class="form-header">
            <h2>Create Order</h2>
            <form method="get" asp-action="Dashboard" asp-controller="Admin" style="display:inline;">
                <button type="submit" class="pink-button">Back</button>
            </form>
        </div>

        <form asp-action="CreateOrder" method="post">
            <div class="form-group">
                <label>Shipping Address</label>
                <input asp-for="ShippingAddress" class="form-control" />
            </div>
            <div class="form-group">
                <label>Payment Method</label>
                <input asp-for="PaymentMethod" class="form-control" />
            </div>

            <h4 style="color:white;">Order Items</h4>
            <div id="order-items-container">
                @if (Model?.OrderItems != null)
                {
                    @for (int i = 0; i < Model.OrderItems.Count; i++)
                    {
                        <div class="form-group">
                            <label>Quantity for Product ID @Model.OrderItems[i].ProductId</label>
                        <input type="hidden" asp-for="OrderItems[@i].ProductId" />
                        <input type="number" asp-for="OrderItems[@i].Quantity" class="form-control" />
                    </div>
                    }
                
                }
                else
                {
                }
            </div>

            <button type="submit" class="pink-button">Place Order</button>
        </form>
    </div>
</body>
</html>
